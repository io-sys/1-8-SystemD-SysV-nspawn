# -*- mode: ruby -*-
# vim: set ft=ruby :
home = 'C:/Users/io.sys/Downloads/VirtualBox VMs/lab04-bash/'
# ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :linuxHTTPDTemlates => {
        :box_name => "centos/7",
        :box_version => "1804.02",
        :ip_addr => '192.168.11.101',
    :disks => {
        :sata1 => {
            :dfile => home + '/VirtualBox VMs/sata1.vdi',
            :size => 1024,
            :port => 1
        },
=begin
        :sata2 => {
            :dfile => home + '/VirtualBox VMs/sata2.vdi',
            :size => 1024, # Megabytes
            :port => 2
        },
        :sata3 => {
            :dfile => home + '/VirtualBox VMs/sata3.vdi',
            :size => 1024, # Megabytes
            :port => 3
        },
        :sata4 => {
            :dfile => home + '/VirtualBox VMs/sata4.vdi',
            :size => 1024,
            :port => 4
        }
=end
    }
  },
}

Vagrant.configure("2") do |config|

    config.vm.box_version = "1804.02"
    MACHINES.each do |boxname, boxconfig|
  
        config.vm.define boxname do |box|
  
            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s
  
            #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
  
            #box.vm.network "private_network", ip: boxconfig[:ip_addr]
			box.vm.network "public_network", bridge: 'Intel(R) Dual Band Wireless-AC 3165', type: "dhcp"
  
            box.vm.provider :virtualbox do |vb|
                    vb.customize ["modifyvm", :id, "--memory", "256"]
                    needsController = false
            boxconfig[:disks].each do |dname, dconf|
                unless File.exist?(dconf[:dfile])
                  vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                  needsController =  true
                            end
  
            end
                    if needsController == true
                       vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                       boxconfig[:disks].each do |dname, dconf|
                           vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                       end
                    end
            end
  
        box.vm.provision "shell", inline: <<-SHELL
#
#
# 8-3 Unit-file service apache start with @template, a few instants 
#
# Install apache
yum install -y httpd
# Create admin unit-file
cp /usr/lib/systemd/system/httpd.service /etc/systemd/system/httpd@.service
#
# Create template unit file  - httpd
sed -i.orig s@sysconfig/httpd@sysconfig/httpd-%I@ /etc/systemd/system/httpd@.service
#
# 2 file with parameters for start web-server with templates @
cp /etc/sysconfig/httpd /etc/sysconfig/httpd-first
cp /etc/sysconfig/httpd /etc/sysconfig/httpd-second
#
# -f option is  path to config file     cat /etc/sysconfig/httpd-first
# Edit, sed found #OPTIONS= edit to OPTIONS="-f conf/first.conf", ' for quotes "
sed -i.orig 's@^#OPTIONS=@OPTIONS="-f conf/first.conf"@' /etc/sysconfig/httpd-first
# cat /etc/sysconfig/httpd-second
sed -i.orig 's@^#OPTIONS=@OPTIONS="-f conf/second.conf"@' /etc/sysconfig/httpd-second
#
# Create 2 httpd config files for templates @  it was first.conf and second.conf
# cat /etc/httpd/conf/first.conf   
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/first.conf
# cat /etc/httpd/conf/second.conf
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/second.conf
#
# Change PidFile and Listen port
# sed edit Listen 80 to Listen 8009
sed -i.orig "s/^Listen 80/Listen 8009/" /etc/httpd/conf/first.conf
# add to and config file PidFile 
echo 'PidFile /var/run/httpd-first.pid' >> /etc/httpd/conf/first.conf
#
# sed edit Listen 80 to Listen 8008
sed -i.orig "s/^Listen 80/Listen 8008/" /etc/httpd/conf/second.conf
# add to and config file PidFile 
echo 'PidFile /var/run/httpd-second.pid' >> /etc/httpd/conf/second.conf
#
# Start configuration with @second template
systemctl start httpd@second
# Show ports - httpd
ss -tnulp | grep httpd
# Start configuration with @first template
systemctl start httpd@first
# Show ports - httpd
ss -tnulp | grep httpd
#
# End
          SHELL
  
        end
    end
  end
  
